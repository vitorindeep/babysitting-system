@page
@model GuguDadah.Pages.Schedule
@{
    ViewData["Title"] = "Agendar trabalho";
}

<h4>Agendar trabalho</h4>
<hr />

@section head
    {

    <link href="https://code.jquery.com/ui/1.9.2/themes/base/jquery-ui.css" rel="stylesheet" />

}

@section Scripts
    {
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js"></script>
    <script src="https://code.jquery.com/ui/1.9.2/jquery-ui.js"></script>
    <script>
        $("#mydate").datepicker({ dateFormat: "dd-mm-yy" }).datepicker("setDate", "0");
    </script>
    <script>
        $("#mydate1").datepicker({ dateFormat: "dd-mm-yy" }).datepicker("setDate", "0");
    </script>
    <script>
        $(document).ready(function () {

            var currgeocoder;

            //Set geo location lat and long
            navigator.geolocation.getCurrentPosition(function (position, html5Error) {
                geo_loc = processGeolocationResult(position);
                currLatLong = geo_loc.split(",");
                initializeCurrent(currLatLong[0], currLatLong[1]);
            });

            //Get geo location result
            function processGeolocationResult(position) {
                html5Lat = position.coords.latitude; //Get latitude
                html5Lon = position.coords.longitude; //Get longitude
                html5TimeStamp = position.timestamp; //Get timestamp
                html5Accuracy = position.coords.accuracy; //Get accuracy in meters
                return (html5Lat).toFixed(8) + ", " + (html5Lon).toFixed(8);
            }

            //Check value is present or
            function initializeCurrent(latcurr, longcurr) {
                currgeocoder = new google.maps.Geocoder();

                console.log(latcurr + "-- ######## --" + longcurr);

                if (latcurr != '' && longcurr != '') {
                    //call google api function
                    var myLatlng = new google.maps.LatLng(latcurr, longcurr);
                    return getCurrentAddress(myLatlng);
                }
            }

            //Get current address
            function getCurrentAddress(location) {
                currgeocoder.geocode({
                    'location': location
                }, function (results, status) {
                    if (status == google.maps.GeocoderStatus.OK) {
                        console.log(results[0]);
                        document.getElementById('actualLocation').value = results[0].formatted_address;
                    } else {
                        alert('Geocode was not successful for the following reason: ' + status);
                    }
                });
            }
        });
    </script>
    <script src="https://maps.googleapis.com/maps/api/js?libraries=places&key=AIzaSyAu-XPGnW2XGLA1z8_qQqhApBwAMJJthQg"></script>
}

<div class="row">
    <div class="col-lg-8 col-lg-offset-2">
        <div class="well">
            <form asp-page-handler="ReturningTempWork" asp-page="Schedule" method="post">
                <section>
                    <div class="form-group">
                        @Html.LabelFor(m => m.Work.Address, new { @class = "control-label" })
                        @Html.TextBoxFor(m => m.Work.Address, new { @class = "form-control", @id = "actualLocation", @name = "actualLocation" })
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(m => m.StartDate, new { @class = "control-label" })
                        <p><input type="text" id="mydate" asp-for="StartDate" class="form-control"></p>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(m => m.StartTime, new { @class = "control-label" })
                        <p><input type="time" class="timepicker form-control" value="@DateTime.Now.ToShortTimeString()" asp-for="StartTime"></p>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(m => m.EndDate, new { @class = "control-label" })
                        <p><input type="text" id="mydate1" asp-for="EndDate" class="form-control"></p>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(m => m.EndTime, new { @class = "control-label" })
                        <p><input type="time" class="timepicker form-control" value="@DateTime.Now.ToShortTimeString()" asp-for="EndTime"></p>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(m => m.Work.Observations, new { @class = "control-label" })
                        @Html.TextBoxFor(m => m.Work.Observations, new { placeholder = "Comunicar informações relevantes...", @class = "form-control" })
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(m => m.Type, new { @class = "control-label" })
                        <div>
                            <label>
                                @Html.RadioButtonFor(m => m.Type, "normal")
                                Normal - 10€/h
                            </label>
                        </div>
                        <div>
                            <label>
                                @Html.RadioButtonFor(m => m.Type, "study")
                                Acompanhamento ao estudo (acresce 10€/h)
                            </label>
                        </div>
                        <div>
                            <label>
                                @Html.RadioButtonFor(m => m.Type, "exterior")
                                Atividade lúdica no exterior (acresce 5€/h)
                            </label>
                        </div>
                    </div>

                    @Html.ValidationSummary(false)

                    <div class="form-group">
                        <input type="submit" class="btn btn btn-info pull-right" value="Continuar" />
                    </div>
                </section>
            </form>
        </div>
    </div>

</div>